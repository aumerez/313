{"version":3,"sources":["redux/wallet/wallet.types.js","redux/wallet/wallet.reducer.js","redux/root-reducer.js","redux/store.js","assets/imgs/Illustration-02.png","assets/imgs/ScrollBar-01.png","assets/fonts/LeagueGothic-Italic.otf","pages/homepage/homepage.component.jsx","assets/imgs/Illustration_Mint-01.png","components/mint-button/mint-button.component.jsx","pages/mintpage/mintpage.component.jsx","assets/imgs/logo_white.png","web3/networks.js","redux/wallet/wallet.actions.js","components/metamask-button/metamask-button.component.jsx","components/header/header.component.jsx","App.js","index.js"],"names":["WalletActionTypes","INITIAL_STATE","currentWallet","walletReducer","state","action","type","payload","combineReducers","wallet","middlewares","logger","store","createStore","rootReducer","applyMiddleware","HomePage","className","src","ilustration","id","alt","style","backgroundImage","scroll","index","MintButton","useSelector","mint","a","console","log","onClick","substring","MintPage","ImageMint","NETWORKS","setCurrentWallet","MetamaskButton","dispatch","useDispatch","useEffect","ethereum","window","accountWasChanged","accounts","clearAccount","on","request","method","then","error","removeListener","connectWallet","networkVersion","alert","Header","to","Logo","textDecoration","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a538dc53.chunk.js","sourcesContent":["export const WalletActionTypes = {\n  SET_CURRENT_WALLET: 'SET_CURRENT_WALLET'\n}\n","import { WalletActionTypes } from \"./wallet.types\"\n\nconst INITIAL_STATE = {\n  currentWallet: null\n}\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case WalletActionTypes.SET_CURRENT_WALLET:\n      return {\n        ...state,\n        currentWallet: action.payload\n      }\n    default: \n      return state;\n  }\n}\n\nexport default walletReducer;","import { combineReducers } from \"redux\";\n\nimport walletReducer from \"./wallet/wallet.reducer\";\n\nexport default combineReducers({\n  wallet: walletReducer\n});","import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\n\nconst middlewares = [logger];\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\n\nexport default store;","export default __webpack_public_path__ + \"static/media/Illustration-02.bf28429a.png\";","export default __webpack_public_path__ + \"static/media/ScrollBar-01.1ef18a0a.png\";","export default __webpack_public_path__ + \"static/media/LeagueGothic-Italic.8d24e264.otf\";","import React from 'react';\n\nimport ilustration from '../../assets/imgs/Illustration-02.png';\nimport scroll from '../../assets/imgs/ScrollBar-01.png';\n\nimport './homepage.styles.scss';\n\nimport Ticker from 'react-ticker'\n\nimport '../../assets/fonts/LeagueGothic-Italic.otf';\n\n\nconst HomePage = () => (\n  <div>\n    <div className='homepage'>\n      <img src= {ilustration} id=\"bg\" alt=\"\" />\n    </div>\n    <div className='bottonBand' style={{ backgroundImage: `url(${scroll})`}}>\n      <Ticker>\n          {({ index }) => (\n              <>\n                  <h1 className='textBand'>BUILDING IN A CITY WE LOVE.  </h1>\n                  <img src=\"www.my-image-source.com/\" alt=\"\"/>\n              </>\n          )}\n      </Ticker>\n    </div>\n  </div>\n);\n\nexport default HomePage;","export default __webpack_public_path__ + \"static/media/Illustration_Mint-01.e06edfc0.png\";","import React  from \"react\";\nimport { useSelector } from 'react-redux';\n\nimport './mint-button.styles.scss';\nimport '../../assets/fonts/LeagueGothic-Italic.otf';\n\n\nconst MintButton = () => {\n  const wallet = useSelector(state => state.wallet.currentWallet); \n\n  const mint = async () => {\n    console.log(\"MINT\");\n  }\n  \n  return (\n    <button className='mint-btn' onClick={mint}>\n       { wallet ? \n        (<div>\n          { 'MINT' } \n          <div className='mint-button-address-label'>\n            {wallet.substring(0,15)}{'...'}\n          </div>\n        </div>) : (\n          <div>MINT\n          <div className='mint-button-address-label'>\n            No Wallet Selected\n          </div>\n        </div>  \n        ) }\n    </button>\n\n  );\n}\n\nexport default MintButton;","import React from 'react';\n\nimport ImageMint from '../../assets/imgs/Illustration_Mint-01.png';\nimport MintButton from '../../components/mint-button/mint-button.component';\n\nimport './mintpage.styles.scss';\n\nconst MintPage = () => (\n    <div className='mints'>\n        <img src={ImageMint} id='bg1' />\n        <div className='text-wrapper'>\n            <h1>MINT A</h1>\n            <h1>DETROIT</h1>\n            <h1>SOCIALITE</h1>\n            <MintButton />\n            {/*<button className=\"btn\">CLICK HERE</button>*/}\n        </div>\n    </div>\n  );\n\n  export default MintPage;","export default __webpack_public_path__ + \"static/media/logo_white.76303385.png\";","export const NETWORKS = {\n  ETHEREUM_MAIN_NET : 1,\n  ETHEREUM_ROPSTEN : 3,\n  ETHEREUM_RINKEBY : 4,\n  ETHEREUM_GOERLY : 5\n}","import { WalletActionTypes } from \"./wallet.types\";\n\nexport const setCurrentWallet = wallet => {\n  return {\n    type: WalletActionTypes.SET_CURRENT_WALLET,\n    payload: wallet\n  }\n}\n","import React, { useEffect }  from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { NETWORKS } from '../../web3/networks'\nimport { setCurrentWallet } from '../../redux/wallet/wallet.actions';\n\nimport './metamask-button.styles.scss';\nimport '../../assets/fonts/LeagueGothic-Italic.otf';\n\nconst MetamaskButton = () => {\n  const wallet = useSelector(state => state.wallet.currentWallet); \n  const dispatch = useDispatch();\n\n  useEffect(()=> {\n    const { ethereum } = window;\n    if (!ethereum) {\n      return;\n    }\n    \n    const accountWasChanged = (accounts) => {\n      dispatch (setCurrentWallet(accounts[0]));\n      console.log(\"account was Changed\",accounts[0]);\n    }\n    \n    const getAndSetAccount = async () => {\n      const { ethereum } = window;\n      const network = ethereum.networkVersion; \n      if (network < NETWORKS.ETHEREUM_GOERLY) {\n        const accounts = await ethereum.request({\n          method: 'eth_requestAccounts'});\n        console.log(accounts);\n        dispatch (setCurrentWallet(accounts[0]));\n      } else {\n        alert(\"Wrong Network. Please select Ethereum Network\");\n      }\n    }\n    \n    const clearAccount = () => {\n      dispatch (setCurrentWallet('0x0'));\n      console.log(\"clearAcccount\");\n    }\n\n    ethereum.on('accountsChanged', accountWasChanged);\n    //ethereum.on('connect', getAndSetAccount);\n    ethereum.on('disconnect', clearAccount);\n\n    window.ethereum.request({ method: 'eth_requestAccounts' }).then(accounts => {\n      console.log('accounts', accounts);\n      // No need to set account here, it will be set by the event listener\n    }, error => {\n      // Handle any UI for errors here, e.g. network error, rejected request, etc.\n      // Set state as needed \n    })\n    return () => {\n      // Return function of a non-async useEffect will clean up on component leaving screen, or from re-reneder to due dependency change\n      ethereum.removeListener('accountsChanged', accountWasChanged);\n      //ethereum.off('connect', getAndSetAccount);\n      ethereum.removeListener('disconnect', clearAccount);\n    }\n\n\n  },[dispatch])\n \n  const connectWallet = async () => {\n    const { ethereum } = window;\n    if (ethereum && !wallet) {\n      try {\n        const network = ethereum.networkVersion; //await web3.eth.getChainId;\n        if (network < NETWORKS.ETHEREUM_GOERLY) {\n          const accounts = await ethereum.request({\n            method: 'eth_requestAccounts'});\n          console.log(accounts);\n          dispatch (setCurrentWallet(accounts[0]));\n        } else {\n          alert(\"Wrong Network. Please select Ethereum Network\");\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n  \n  return (\n    <button className='button' onClick={connectWallet} >\n      {wallet ? (\n      <div>CONNECTED\n        <div className='button-address-label'>{wallet.substring(0,15)}{'...'}</div>\n      </div>) : (<div>CONNECT\n          <div>WALLET</div>\n          </div>) }\n    </button>\n  );\n}\n\nexport default MetamaskButton;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Logo from '../../assets/imgs/logo_white.png';\n\nimport MetamaskButton from '../metamask-button/metamask-button.component';\n\nimport './header.styles.scss';\n\n\nconst Header = () => (\n\n  <div className='header'>\n    <Link className='logo-container' to='/'>\n      <img src= { Logo } id='logo'/>\n    </Link>\n    <div className='options'>\n        <Link className='option' to='/' style={{ textDecoration: 'none' }}>\n            HOME\n        </Link>\n        <Link className='option' to='/mint' style={{ textDecoration: 'none' }}>\n            MINT\n        </Link>\n        <div className='option'>\n            <MetamaskButton />\n        </div>\n    </div>\n  </div>\n);\n\nexport default Header;","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport MintPage from './pages/mintpage/mintpage.component';\n\nimport Header from './components/header/header.component';\n\nfunction App() {\n  return (\n    <div className='body'>\n      <Header />\n      <Switch>\n        <Route exact path='/' component={HomePage}></Route>\n        <Route path='/313' component={HomePage}></Route>\n        <Route path='/mint' component={MintPage}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}